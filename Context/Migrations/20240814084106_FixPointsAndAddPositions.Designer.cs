// <auto-generated />
using System;
using LovchaFantasy.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LovchaFantasy.Context.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240814084106_FixPointsAndAddPositions")]
    partial class FixPointsAndAddPositions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Actionn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("actions");
                });

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Game", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("end")
                        .HasColumnType("date");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("start")
                        .HasColumnType("date");

                    b.HasKey("id");

                    b.ToTable("games");
                });

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Points", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("ActionnId")
                        .HasColumnType("integer");

                    b.Property<int>("PositionId")
                        .HasColumnType("integer");

                    b.Property<int>("Point")
                        .HasColumnType("integer");

                    b.HasKey("GameId", "ActionnId", "PositionId");

                    b.HasIndex("ActionnId");

                    b.HasIndex("PositionId");

                    b.ToTable("points");
                });

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("positions");
                });

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Rules", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("integer");

                    b.Property<int>("BenchCount")
                        .HasColumnType("integer");

                    b.Property<int>("GwTransfers")
                        .HasColumnType("integer");

                    b.Property<int>("MaxTransfers")
                        .HasColumnType("integer");

                    b.Property<int>("OneClubPlayersCount")
                        .HasColumnType("integer");

                    b.Property<int>("TeamCount")
                        .HasColumnType("integer");

                    b.HasKey("GameId");

                    b.ToTable("rules");
                });

            modelBuilder.Entity("LovchaFantasy.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("images");
                });

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Points", b =>
                {
                    b.HasOne("LovchaFantasy.Models.Fantasy.Actionn", "Actionn")
                        .WithMany("Points")
                        .HasForeignKey("ActionnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LovchaFantasy.Models.Fantasy.Game", "Game")
                        .WithMany("Points")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LovchaFantasy.Models.Fantasy.Position", "Position")
                        .WithMany("Points")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actionn");

                    b.Navigation("Game");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Rules", b =>
                {
                    b.HasOne("LovchaFantasy.Models.Fantasy.Game", "Game")
                        .WithOne("Rules")
                        .HasForeignKey("LovchaFantasy.Models.Fantasy.Rules", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Actionn", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Game", b =>
                {
                    b.Navigation("Points");

                    b.Navigation("Rules")
                        .IsRequired();
                });

            modelBuilder.Entity("LovchaFantasy.Models.Fantasy.Position", b =>
                {
                    b.Navigation("Points");
                });
#pragma warning restore 612, 618
        }
    }
}
