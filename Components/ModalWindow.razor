@* ModalWindow.razor *@
@if (IsVisible)
{
    <div class="modal-backdrop">
        <div class="modalWindow" @onclick:stopPropagation="true">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <div class="modal-header_menu">@HeaderContent</div>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
            <div class="modal-footer">
                @FooterContent
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public string Title { get; set; } = "Модальное окно";
    [Parameter] public RenderFragment? HeaderContent { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? FooterContent { get; set; }
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> OnClose { get; set; }

    private void Close()
    {
        IsVisible = false;
        OnClose.InvokeAsync(IsVisible);
    }
}

@* CSS styles (можно вынести в отдельный файл) *@
<style>
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .modalWindow {
        background-color: white;
        padding: 20px;
        border-radius: 5px;
        width: 70%;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Добавьте тень */
    }
    .modalWindow h3{
        font-size: 17px;
        font-weight:bold;
    }
    .modal-header_menu{
        display:flex;
        width:90%;
    }
        .modal-header_menu h1{
            font-size: calc( (100vw - 320px)/(2000 - 320) * (16 - 14) + 14px);
            margin-right:3%;
            margin-bottom:0;
        }
</style>